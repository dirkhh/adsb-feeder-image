#!/bin/bash

# this needs to run as root
if [ $(id -u) != "0" ] ; then
    echo "this command requires superuser privileges - please run as sudo bash $0"
    exit 1
fi

# identify the calling process for better log messages
PARENTPID=$(ps -cp $$ -o ppid="")
if kill -0 "$PARENTPID" &> /dev/null ; then
    # shellcheck disable=SC2086 # the ps -q call fails with quotes around the variable
    PARENTPROC=$(ps -q$PARENTPID -o args=)
else
    PARENTPROC="process $PARENTPID (appears already gone)"
fi
echo "$(date -u +"%FT%T.%3NZ") $PARENTPROC called nightly-update-adsb-im" "$@" >&2

cd /opt/adsb || exit 0

# only rotate log if longer than 5000 lines
if [[ -f /opt/adsb/adsb-setup.log ]] && (( $(wc -l < /opt/adsb/adsb-setup.log) > 5000 )); then
    TIMESTAMP=$(date +%Y-%m-%d+%H:%M)
    cp adsb-setup.log adsb-setup.log."$TIMESTAMP"
    truncate -s 0 adsb-setup.log
    tail -n500 adsb-setup.log."$TIMESTAMP" >> adsb-setup.log
    find . -name adsb-setup.log.\* -ctime +7 | xargs rm -f
fi

# check in the .env file what we should do
if grep -q "^AF_IS_NIGHTLY_BASE_UPDATE_ENABLED=True" config/.env ; then
    # do an OS update - either using the DietPi update tool or by just using apt
    if [ -x /boot/dietpi/dietpi-update ] ; then
        G_INTERACTIVE=0 CONFIG_CHECK_APT_UPDATES=2 dietpi-update 1 >> /opt/adsb/adsb-setup.log 2>&1
    else
        apt update >> /opt/adsb/adsb-setup.log 2>&1
        apt upgrade -y >> /opt/adsb/adsb-setup.log 2>&1
    fi
fi
if grep "^AF_IS_NIGHTLY_FEEDER_UPDATE_ENABLED=True" config/.env ; then
    bash /opt/adsb/feeder-update
fi
