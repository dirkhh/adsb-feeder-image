# Original: https://github.com/guysoft/OctoPi-Klipper-CustomPiOS/blob/6a88c12f562be4668e26fe89a445e761be1481ac/LICENSE
# License: GPL-3.0
name: build images

on:
  push:
    branches:
    - 'main'
    - 'dev'
    tags:
    - "v*"

jobs:
  # first, prepare the sources by moving the 'latest' tag to the current SHA
  prepare:
    runs-on: ubuntu-latest
    steps:
    # check the sources out in the 'expected place' for the following step that tags them
    - name: Checkout Project Repository
      uses: actions/checkout@v3
    - name: Check Python Code
      run: |
        cd src/modules/adsb-pi-setup/filesystem/root/usr/local/share/adsb-pi-setup
        python3 -m py_compile *.py
    - name: tag current version as latest (regardless of other tags)
      uses: rickstaa/action-create-tag@v1
      with:
        tag: "latest"
        tag_exists_error: false
        force_push_tag: true
        message: "latest commit"
  # next run all the board builds
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        name: [asus-tinkerboard, banana-pi-m5-m2p, lepotato, odroidc4, orangepi3-lts, orangepi4-lts, orangepi5, pine64, raspberrypi32, raspberrypi64, renegade, rockpi4]
        include:
        - name: asus-tinkerboard
          base_arch: ""
          variant: armbian
          url: https://redirect.armbian.com/region/EU/tinkerboard/Bookworm_current_minimal
          magic_path: "repository/src/image-armbian/asus-tinkerboard.img.xz"
        - name: banana-pi-m5-m2p
          base_arch: arm64
          variant: armbian
          url: https://redirect.armbian.com/region/EU/bananapim5/Bookworm_current_minimal
          magic_path: "repository/src/image-armbian/banana-pi-m5-m2p.img.xz"
        - name: lepotato
          base_arch: arm64
          variant: armbian
          url: https://redirect.armbian.com/region/EU/lepotato/Bookworm_current_minimal
          magic_path: "repository/src/image-armbian/le-potato.img.xz"
        - name: odroidc4
          base_arch: arm64
          variant: armbian
          url: https://redirect.armbian.com/region/EU/odroidc4/Bookworm_current_minimal
          magic_path: "repository/src/image-armbian/odroidc4.img.xz"
        - name: orangepi3-lts
          base_arch: arm64
          variant: armbian
          url: https://redirect.armbian.com/region/EU/orangepi3-lts/Bookworm_current_minimal
          magic_path: "repository/src/image-armbian/orangepi3-lts.img.xz"
        - name: orangepi4-lts
          base_arch: arm64
          variant: armbian
          url: https://redirect.armbian.com/region/EU/orangepi4-lts/Bookworm_current_minimal
          magic_path: "repository/src/image-armbian/orangepi4-lts.img.xz"
        - name: orangepi5
          base_arch: arm64
          variant: armbian-root2
          url: https://redirect.armbian.com/region/EU/orangepi5/Bookworm_legacy_minimal
          magic_path: "repository/src/image-armbian/orangepi5.img.xz"
        - name: pine64
          variant: armbian
          base_arch: arm64
          url: https://redirect.armbian.com/region/EU/pine64/Bookworm_current_minimal
          magic_path: "repository/src/image-armbian/pine64.img.xz"
        - name: raspberrypi32
          variant: default
          base_arch: ""
          url: https://downloads.raspberrypi.org/raspios_lite_armhf/images/raspios_lite_armhf-2023-02-22/2023-02-21-raspios-bullseye-armhf-lite.img.xz
          magic_path: "repository/src/image/2023-02-21-raspios-bullseye-armhf-lite.img.xz"
        - name: raspberrypi64
          base_arch: arm64
          variant: default
          url: https://downloads.raspberrypi.org/raspios_lite_arm64/images/raspios_lite_arm64-2023-02-22/2023-02-21-raspios-bullseye-arm64-lite.img.xz
          magic_path: "repository/src/image/2023-02-21-raspios-bullseye-arm64-lite.img.xz"
        - name: renegade
          variant: armbian
          base_arch: arm64
          url: https://redirect.armbian.com/region/EU/renegade/Bookworm_current_minimal
          magic_path: "repository/src/image-armbian/renegade.img.xz"
        - name: rockpi4
          variant: armbian
          base_arch: arm64
          url: https://redirect.armbian.com/region/EU/rockpi-4c/Bookworm_current_minimal
          magic_path: "repository/src/image-armbian/rockpi4.img.xz"

    env:
      IMG_NAME: ${{ matrix.name }}
      BASE_ARCH: ${{ matrix.base_arch }}
      VARIANT: ${{ matrix.variant }}
      IMAGE_URL: ${{ matrix.url }}
      MAGIC_PATH: ${{ matrix.magic_path }}


    steps:
    - name: Checkout Project Repository again with the new tag - and make sure we have the full history for the version code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        path: repository

    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install coreutils p7zip-full qemu-user-static

    - name: Checkout CustomPiOS
      uses: actions/checkout@v3
      with:
        repository: 'guysoft/CustomPiOS'
        path: CustomPiOS


    - name: Update CustomPiOS Paths
      run: |
        cd repository/src
        ../../CustomPiOS/src/update-custompios-paths


    - name: Download image
      run: |
        MAGIC_DIR=$(dirname "${MAGIC_PATH}")
        mkdir -p "${MAGIC_DIR}"
        wget -qO "${MAGIC_PATH}" "$IMAGE_URL"


    - name: Build Image
      run: |
        sudo modprobe loop
        cd repository/src
        # if BASE_ARCH is set, add it to config
        if [ -n "${BASE_ARCH}" ]; then
          echo "export BASE_ARCH=${BASE_ARCH}" >> config
        fi
        sudo bash -x ./build_dist "${VARIANT}"


    - name: Release Image
      env:
        BASE_RELEASE_COMPRESS: no
      run: |
        cd repository/src
        # CUSTOM_PI_OS_PATH is needed, its set in build_dist. Setting here manually
        export CUSTOM_PI_OS_PATH="$(realpath ../../CustomPiOS/src/)"
        source config
        sudo --preserve-env ../../CustomPiOS/src/release "${VARIANT}"


    - name: create a reasonable tag for this run - either a short sha or the tag we were called with
      id: tag
      run: |
        export tag=""
        if [ "${{ github.ref_type }}" = "tag" ] ; then tag="${{ github.ref_name }}" ; else tag="${{ github.sha }}" ; fi
        export better_tag=$(echo $tag | sed -r 's/^(.{8}).{32}$/g-\1/')
        echo "tag=${better_tag}" >> $GITHUB_OUTPUT


    - name: Copy output
      id: copy
      run: |
        find -name "*.img*" || true
        CURRENT_IMAGE_NAME="$(basename $MAGIC_PATH)"
        echo "${CURRENT_IMAGE_NAME}"
        IMAGE="adsb-feeder-${IMG_NAME}-${{ steps.tag.outputs.tag }}.img"
        if [ "${VARIANT}" = "default" ]; then
          WORKSPACE="repository/src/workspace"
        else
          WORKSPACE="repository/src/workspace-${VARIANT}"
        fi
        sudo chmod 777 -R "$WORKSPACE"

        sudo chmod 777 .
        BUILT_IMAGE="$(find $WORKSPACE -name "*.img" | head -n 1)"
        mv -v "${BUILT_IMAGE}" "${IMAGE}"
        sudo chmod 777 "${IMAGE}"
        echo "image=${IMAGE}" >> $GITHUB_OUTPUT


    - name: Compress img to img.xz
      id: compress
      run: |
        export IMAGE="${{ steps.copy.outputs.image }}"
        sudo xz -z -1 -T0 "${IMAGE}"
        ls -l "${IMAGE}.xz"
        echo "image=${IMAGE}.xz" >> $GITHUB_OUTPUT


    - name: Upload to GitHub Releases
      uses: softprops/action-gh-release@v1
      if: ${{ startsWith(steps.tag.outputs.tag, 'v') }}
      with:
        token: ${{ secrets.PAT_GITHUB_TOKEN }}
        files: "*.img.xz"
        generate_release_notes: true


    - name: Upload non-release artifacts
      uses: softprops/action-gh-release@v1
      if: ${{ startsWith(steps.tag.outputs.tag, 'g') }}
      with:
        token: ${{ secrets.PAT_GITHUB_TOKEN }}
        files: "*.img.xz"
        generate_release_notes: true
        prerelease: true
        tag_name: latest
        name: testbuild-${{ steps.tag.outputs.tag }}
